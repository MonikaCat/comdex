syntax = "proto3";
package comdex.nft.v1beta1;

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/comdex-official/comdex/x/nft/types";
option (gogoproto.goproto_getters_all) = false;

// Collection
message Collection {
  option (gogoproto.equal) = true;

  Denom         denom      = 1 [(gogoproto.nullable) = false];
  repeated NFT nfts      = 2 [(gogoproto.customname) = "NFTs", (gogoproto.nullable) = false];
}

message IDCollection {
  option (gogoproto.equal) = true;

  string          denom_id = 1 [(gogoproto.moretags) = "yaml:\"denom_id\""];
  repeated string nft_ids = 2 [(gogoproto.moretags) = "yaml:\"nft_ids\""];
}

message Denom {
  option (gogoproto.equal) = true;

  string id = 1;
  string symbol = 2; 
  string name = 3; 
  string description = 4; 
  string previewUri = 5[
    (gogoproto.moretags)   = "yaml:\"preview_uri\"",
    (gogoproto.customname) = "PreviewURI"
  ];
  string schema = 6; 
  string sender = 7; 
  string creator = 8;
}

//ASSET or NFT
message NFT {
  option (gogoproto.equal)               = true;

  string                    id           = 1;
  Metadata                  metadata     = 2 [(gogoproto.nullable) = false];
  string                    data         = 3;
  string                    owner        = 4;
  bool                      transferable = 5;
  bool                      extensible   = 6;
  google.protobuf.Timestamp created_at   = 7 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime)  = true,
    (gogoproto.moretags) = "yaml:\"created_at\""
  ];
  bool                      nsfw         = 8;
  string                    royalty_share = 9 [
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"royalty_share\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
}

message Metadata {
  option (gogoproto.equal) = true;

  string name              = 1 [(gogoproto.moretags) = "yaml:\"name\""];
  string description       = 2 [(gogoproto.moretags) = "yaml:\"description\""];
  string media_uri         = 3 [
    (gogoproto.moretags)   = "yaml:\"media_uri\"",
    (gogoproto.customname) = "MediaURI"
  ];
  string preview_uri       = 4 [
    (gogoproto.moretags)   = "yaml:\"preview_uri\"",
    (gogoproto.customname) = "PreviewURI"
  ];
}


message Owner {
  option (gogoproto.equal)             = true;

  string                address        = 1;
  repeated IDCollection id_collections = 2 [
    (gogoproto.moretags)   = "yaml:\"idcs\"",
    (gogoproto.customname) = "IDCollections",
    (gogoproto.nullable)   = false
  ];
}