syntax = "proto3";
package comdex.nft.v1beta1;

import "gogoproto/gogo.proto";
import "comdex/nft/v1beta1/denom.proto";
// this line is used by starport scaffolding # proto/tx/import

option go_package = "github.com/comdex-official/comdex/x/nft/types";
option (gogoproto.equal_all) = false;
option (gogoproto.goproto_getters_all) = false;

// Msg defines the Msg service.
service Msg {
    rpc CreateDenom(MsgCreateDenom) returns (MsgCreateDenomResponse);
  rpc UpdateDenom(MsgUpdateDenom) returns (MsgUpdateDenomResponse);
  rpc TransferDenom(MsgTransferDenom) returns (MsgTransferDenomResponse);

  rpc MintNFT(MsgMintNFT) returns (MsgMintNFTResponse);
  rpc TransferNFT(MsgTransferNFT) returns (MsgTransferNFTResponse);
  rpc BurnNFT(MsgBurnNFT) returns (MsgBurnNFTResponse);
// this line is used by starport scaffolding # proto/tx/rpc
}

message MsgCreateDenom {
  option (gogoproto.equal) = true;

  string id                = 1;
  string symbol            = 2;
  string name              = 3;
  string description       = 4;
  string preview_uri       = 5 [
    (gogoproto.customname) = "PreviewURI",
    (gogoproto.moretags)   = "yaml:\"preview_uri\""
  ];
  string schema            = 6;
  string sender            = 7;
}

message MsgCreateDenomResponse {
}

message MsgUpdateDenom {
  option (gogoproto.equal) = true;

  string id                = 1;
  string name              = 2;
  string description       = 3;
  string preview_uri       = 4 [
    (gogoproto.moretags)   = "yaml:\"preview_uri\"",
    (gogoproto.customname) = "PreviewURI"
  ];
  string sender            = 5;
}

message MsgUpdateDenomResponse {}

message MsgTransferDenom {
  option (gogoproto.equal) = true;

  string id                = 1;
  string sender            = 2;
  string recipient         = 3;
}

message MsgTransferDenomResponse {}

message MsgMintNFT {
  option (gogoproto.equal) = true;

  string   id              = 1;
  string   denom_id        = 2 [(gogoproto.moretags) = "yaml:\"denom_id\""];
  Metadata metadata        = 3 [(gogoproto.nullable) = false];
  string   data            = 4;
  bool     transferable    = 5;
  bool     extensible      = 6;
  bool     nsfw            = 7;
  string   royalty_share   = 8 [
    (gogoproto.nullable)   = false,
    (gogoproto.moretags)   = "yaml:\"royalty_share\"",
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec"
  ];
  string   sender          = 9;
  string   recipient       = 10;
}

message MsgMintNFTResponse {}

message MsgTransferNFT {
  option (gogoproto.equal) = true;

  string id                = 1;
  string denom_id          = 2 [(gogoproto.moretags) = "yaml:\"denom_id\""];
  string sender            = 3;
  string recipient         = 4;
}

message MsgTransferNFTResponse {}

message MsgBurnNFT {
  option (gogoproto.equal) = true;

  string id                = 1;
  string denom_id          = 2 [(gogoproto.moretags) = "yaml:\"denom_id\""];
  string sender            = 3;
}

message MsgBurnNFTResponse {}


// this line is used by starport scaffolding # proto/tx/message